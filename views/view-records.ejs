<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="A simple API for Data Aalytics!!">
    <meta name="author" content="">

    <title>LoggerAPI - Console</title>

    <link href="https://fonts.googleapis.com/css?family=Roboto+Mono:400,500&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">

    <style>
        .masthead {
            margin-top: 20vh;
        }

        body {
            /* color: #fff; */
            overflow-x: hidden;
            font-family: 'Roboto Mono', monospace;
            /* font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol; */
            font-size: 14px;
            line-height: 1.5;
            color: #24292e;

            background: #03A9F4;
            /* background: rgb(255, 255, 255); */
            width: 100vw;
        }

        .btn-primary {
            background: #536DFE;
            /* -webkit-box-shadow: 3px 3px 5px 6px #ccc;
            -moz-box-shadow: 3px 3px 5px 6px #ccc;
            box-shadow: 3px 3px 5px 6px #ccc; */
        }

        code, .data-sample-modal .data2 {
            background: rgb(19, 19, 19);
            color: #02c0ad;
            padding: 6px;
            border-radius: 6px;
        }

        code.ref-code {
            color: #02c0ad;
        }

        code.lg-ref-code.error {
            color: #ff0000;
        }

        span.ref p {
            font-size: 16px;
        }

        .login,
        .dashboard {
            color: #000;
            background: #fff;
            border-radius: 6px;
        }

        .login {
            margin-top: 20vh;
        }

        .dashboard {
            margin-top: 10vh;
        }


        #login-btn {
            margin-top: 10px;
            width: 100%;
            color: #fff;
            background-color: #28a745;
            background-image: linear-gradient(-180deg, #34d058, #28a745 90%);
        }

        #login-btn:hover {
            background-color: #269f42;
            background-image: linear-gradient(-180deg, #2fcb53, #269f42 90%);
            background-position: -.5em;
            border-color: rgba(27, 31, 35, .5);
        }


        #download-btn {
            font-size: 12px;
        }

        input.form-control {
            box-shadow: inset 0 1px 2px rgba(27, 31, 35, .075);
        }

        .dashboard {
            font-family: 'Roboto Mono', monospace;
        }

        pre {
            color: #fff;
            background: rgb(19, 19, 19);
            /* outline: 1px solid #ccc;
             */
            overflow-x: hidden;
            border-radius: 6px;
            padding-left: 10px;
            line-height: 1.7;
            /* margin: 5px; */
            margin-top: 20px;
        }

        .string {
            color: rgb(224, 221, 0);
        }

        .number {
            color: rgb(65, 132, 255);
        }

        .boolean {
            color: rgb(27, 247, 255);
        }

        .null {
            color: rgb(221, 0, 221);
        }

        .key {
            color: #48ff48;
        }

        .download-label {
            font-size: 15px;
        }

        #refresh-btn,
        #lg-show-btn,
        #lg-hide-btn {
            float: right;
            /* margin-left:auto;  */
            /* margin-right:0; */
        }

        .type-anim {
            border-right: .15em solid rgb(22, 22, 22);
            width: auto;
            animation:
                blink-caret .75s step-end infinite;
        }

        @keyframes blink-caret {

            from,
            to {
                border-color: transparent
            }

            50% {
                border-color: rgb(15, 15, 15);
            }
        }

        .refresh-dialogue {
            display: inline;
        }
        .data-sample-modal, data-sample-modal code{
            width: 100%;
        }
        .data-sample-modal{
            margin-top: 20px;
        }
    </style>

</head>

<body id="page-top">

    <!-- Navigation -->

    <!-- Header -->
    <div class="container lg-container">
        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-4 m-2">
                <div class="login">
                    <div class="lg-container p-4">

                        <!-- <form> -->
                        <div>
                            <!-- <h2>API CONSOLE</h2> -->
                            <div class="form-group">
                                <label for="inp-rid">ResourceID:</label>
                                <input type="email" class="form-control" id="inp-rid" aria-describedby="emailHelp">
                            </div>
                            <div class="form-group">
                                <label for="inp-secret">Secret:</label>
                                <input type="password" class="form-control" id="inp-secret">
                            </div>
                            <span class="lg-ref err" style="display:none">
                                <code class="lg-ref-code error"></code>
                            </span>
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="remember-me">
                                <label class="form-check-label" for="remember-me">Remember credentials</label>
                            </div>
                            <button id="login-btn" type="button" class="btn btn-success">Submit</button>
                        </div>
                        <!-- </form> -->

                    </div>
                </div>
            </div>
            <div class="col-md-4"></div>
        </div>
    </div>


    <div class="container dash-container" style="display:none">
        <div class="row">
            <div class="col-md-12">
                <div class="dashboard">
                    <div class="px-sm-3 px-md-4 px-lg-4 py-sm-3 py-md-4 py-lg-4 p-3 p-4">
                        <div style="width:100%">
                            <h2 class="mb-2" style="display:inline">LoggerAPI Console</h2>
                            <button id="refresh-btn" class="btn btn-primary">Refresh</button>
                        </div>
                        <hr>
                        <span class="refresh-modal" style="display: none">
                            <h3 class="refresh-dialogue">Refreshing..!</h3>
                        </span>
                        <div class="dash-data-container">
                            <p>ResourceID:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code class="res-id"></code></p>
                            <p>Number of Logs:&nbsp;&nbsp;<code class="log-entry"></code></p>
                            <br>
                            <strong class="download-label">Download Data: </strong><button id="download-btn"
                                class="btn btn-info">Download as JSON</button>
                            <br><br>

                            <div style="width:100%">
                                <h3 class="mb-2" style="display:inline">Logs Data:</h2>
                                    <button id="lg-show-btn" class="btn btn-success" >Show</button>
                                    <button id="lg-hide-btn" class="btn btn-danger" style="display: none;">Hide</button>
                            </div>
                            <div class="data-sample-modal" >
                                <div class="data2">
                                    Data...
                                </div>
                            </div>
                            <div class="div-data-pre" style="display: none">
                            <pre class="data-pre" >
                                <div class="data"></div>
                            </pre>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <script src="https://code.jquery.com/jquery-3.4.1.min.js"
        integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            console.log("ready!");
            
            function startAnimation(el, string, repeat = 20) {
                var e = document.querySelector(el);
                e.innerHTML = string;
                e.classList.add('type-anim');
                var l = string.length;
                var i = 0, j = 0;
                var s = string.split('');
                // var w = e.style.width;
                w = 1;
                var n = setInterval(function () {
                    e.innerHTML = "";
                    i = 0;
                    // e.style.width = 1;
                    var t = setInterval(function () {
                        e.innerHTML += s[i];
                        i++;
                        // e.style.width++;
                        if (i >= l) {
                            clearInterval(t);
                        }
                    }, 100);
                    j++;
                    if (j >= repeat) {
                        clearInterval(n);
                    }
                }, l * 100 + 1000);

                return n;
            }

            function handleCredentials() {
                var r = localStorage.getItem('r')
                var s = localStorage.getItem('s')
                if (r != null) {
                    document.getElementById('inp-rid').value = r
                }
                if (s != null) {
                    // document.getElementById('inp-secret').type="text";
                    document.getElementById('inp-secret').value = s;
                    // document.getElementById('inp-secret').setAttribute("type", "password"); 
                }
            }

            function saveCredentials() {
                var r = document.getElementById('inp-rid').value;
                var s = document.getElementById('inp-secret').value;
                if (r != null) {
                    localStorage.setItem('r', r)
                }
                if (s != null) {
                    localStorage.setItem('s', s)
                }
            }

            function  dataDisplayHandler(data_display){
                var sb = document.querySelector('#lg-show-btn');
                var hb = document.querySelector('#lg-hide-btn');
                var sd = document.querySelector(".data-sample-modal")
                var td = document.querySelector(".div-data-pre")
                
                if(data_display == 0){
                    hb.style.display="none";
                    sb.style.display="block";

                    td.style.display="none";
                    sd.style.display="block";
                    
                }else{
                    sb.style.display="none";
                    hb.style.display="block";

                    sd.style.display="none";
                    td.style.display="block";
                }
            }

            function downloadObjectAsJson(exportObj, exportName) {
                var dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(exportObj));
                var downloadAnchorNode = document.createElement('a');
                downloadAnchorNode.setAttribute("href", dataStr);
                downloadAnchorNode.setAttribute("download", exportName + ".json");
                document.body.appendChild(downloadAnchorNode); // required for firefox
                downloadAnchorNode.click();
                downloadAnchorNode.remove();
            }

            function syntaxHighlight(json) {
                json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
                return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
                    var cls = 'number';
                    if (/^"/.test(match)) {
                        if (/:$/.test(match)) {
                            cls = 'key';
                        } else {
                            cls = 'string';
                        }
                    } else if (/true|false/.test(match)) {
                        cls = 'boolean';
                    } else if (/null/.test(match)) {
                        cls = 'null';
                    }
                    return '<span class="' + cls + '">' + match + '</span>';
                });
            }


            function analytics(refresh = 0, anim = null) {
                var data = {
                    "resource_id": document.getElementById('inp-rid').value,
                    "secret": document.getElementById('inp-secret').value
                }
                $.ajax({
                    type: 'POST',
                    url: "/api/v1/getLogs",
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    dataType: "json",
                    success: function (resultData, arg2, arg3) {
                        console.log({ resultData, arg2, arg3 })

                        document.querySelector('.dashboard .data-pre .data').innerHTML = syntaxHighlight(JSON.stringify({ logs: resultData.data.log }, undefined, 2));
                        document.querySelector('.res-id').innerHTML = data.resource_id;
                        document.querySelector('.log-entry').innerHTML = resultData.data.log.length;
                        document.getElementById('download-btn').addEventListener('click', function () {
                            downloadObjectAsJson({ logs: resultData.data.log }, "data");
                        })
                        document.querySelector('.dash-container').style.display = "block";
                        document.querySelector('.lg-container').style.display = "none"
                        if (refresh == 1) {
                            document.querySelector('.dash-data-container').style.display = "block";
                            document.querySelector('.refresh-modal').style.display = "none";
                            //stops animation
                            if (anim)
                                clearInterval(anim);
                        }
                    },
                    error: function (arg1, arg2, arg3) {
                        // document.querySelector('code.ref-code').innerHTML = ref_id;
                        console.log({ arg1, arg2, arg3 })
                        document.querySelector('span.lg-ref.err').style.display = "block";
                        // document.querySelector('.lg-ref-code.error').innerHTML = syntaxHighlight(JSON.stringify({ arg1, arg2, arg3 }, undefined, 4));
                        document.querySelector('.lg-ref-code.error').innerHTML = arg1.responseJSON.error;
                    }
                });
            }

            // var ref_id = `REF-${makeid(20)}-${makeid(20)}`;
            // var n = 20;
            // var paths = makeSamplePaths(n);
            // var min = 0, max = n - 1;
            // var path = paths[Math.floor(Math.random() * (+max - +min)) + +min]
            var data = {
                "resource_id": "<%= r%>",
                "secret": "<%= s%>"
            }
            // alert(data)


            console.log(data)
            // document.querySelector('code.ref-code.success').innerHTML = ref_id;
            // document.querySelector('span.ref').style.display = "block";
            handleCredentials();
            document.getElementById('login-btn').addEventListener('click', function () {
                if (document.getElementById('remember-me').checked) {
                    // alert('saving cerdentials');
                    saveCredentials()
                }
                analytics();
            })

            document.getElementById('refresh-btn').addEventListener('click', function () {
                document.querySelector('.dash-data-container').style.display = "none";
                document.querySelector('.refresh-modal').style.display = "block";
                var anim = startAnimation('.refresh-dialogue', "Refreshing...!", 20)
                analytics(1, anim);
            })
            document.getElementById('lg-show-btn').addEventListener('click', function () {
                dataDisplayHandler(1);
            })
            document.getElementById('lg-hide-btn').addEventListener('click', function () {
                dataDisplayHandler(0);
            })
        });
    </script>
</body>

</html>